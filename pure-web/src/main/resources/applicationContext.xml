<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/tx 
                    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                    http://www.springframework.org/schema/aop 
                    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                    http://www.springframework.org/schema/context      
                    http://www.springframework.org/schema/context/spring-context-3.1.xsd
                    http://www.springframework.org/schema/cache 
                    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
                    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">


	<!-- 注解支持 -->
	<context:annotation-config />

	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="org.lzy">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- #################################################################### -->
	<!-- # 装载属性占位符配置 -->
	<!-- #################################################################### -->
	<bean id="customProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean" p:ignoreResourceNotFound="true">
		<property name="locations">
			<!-- 禁止调整加载顺序(注：系统以list最后一个有效的value元素为准) -->
			<list>
				<!-- The first pair -->
				<value>classpath:/config.properties</value>
				<value>file:///etc/iceasy/conf/config.properties</value>
				<!-- The second pair -->
				<!-- The third pair -->
				<!-- The fourth pair -->
				<!-- The fifth pair -->
			</list>
		</property>
	</bean>
	<context:property-placeholder properties-ref="customProperties" />

 
	<!-- 数据源 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<!-- 数据库驱动 -->
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<!-- 相应驱动的jdbcUrl-->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriod"
			value="${BoneCP.idleConnectionTestPeriod}" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAge" value="${BoneCP.idleMaxAge}" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition"
			value="${BoneCP.maxConnectionsPerPartition}" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition"
			value="${BoneCP.minConnectionsPerPartition}" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount"
			value="${BoneCP.partitionCount}" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement"
			value="${BoneCP.acquireIncrement}" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize"
			value="${BoneCP.statementsCacheSize}" />
		<!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
		<property name="releaseHelperThreads"
			value="${BoneCP.releaseHelperThreads}" />
	</bean>

	<!-- JPA实体管理器工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceProvider" ref="persistenceProvider" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaDialect" ref="jpaDialect" />
		<!-- 实体扫描 -->
		<property name="packagesToScan" value="org.lzy.api.model" />

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<prop key="hibernate.connection.driver_class">
					com.mysql.jdbc.Driver
				</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">18</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop><!-- validate/create/update -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>
	 
	<!-- 用于指定持久化实现厂商类 -->
	<bean id="persistenceProvider"
		class="org.hibernate.ejb.HibernatePersistence" />
		
	<!-- 用于设置JPA实现厂商的特定属性 -->
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
	</bean>
	
	<!-- 用于指定一些高级特性 -->
	<bean id="jpaDialect"
		class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<!-- 事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
	
	<!-- 注解式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- #################################################################### -->
	<!-- # 开启织入切面 @Aspectj -->
	<!-- # proxy-target-class 为 true 使用CGLIB 动态代理织入增强 -->
	<!-- # proxy-target-class 为 false 使用JDK 动态代理织入增强【默认，如目标类没有声明接口 Spring 将自动使用CGLIB 动态代理】 -->
	<!-- # expose-proxy 为 true 暴露代理对象至 AopContext -->
	<!-- #################################################################### -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	
	<!-- #################################################################### -->
	<!-- # 导入资源配置文件 -->
	<!-- #################################################################### -->
	<!-- <import resource="classpath:/applicationContext-utility.xml" /> -->
	
</beans>